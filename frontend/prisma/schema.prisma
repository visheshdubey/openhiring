// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum AuthProvider {
  GOOGLE
  GITHUB
}

model User {
  id        String        @id @default(cuid())
  name      String?
  email     String?       @unique
  avatar    String?
  token     String?
  provider  AuthProvider?
  role      UserRole      @default(USER)
  bookmarks Job[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

enum JobStatus {
  APPROVED
  REJECTED
  AWAITING_USER_INFO
}

enum JobType {
  FullTime
  Contract
  Freelance
  PartTime
  INTERNSHIP
}

enum JobWorkMode {
  Remote
  OnSite
  Hybrid
}

model Job {
  id              String       @id @default(cuid()) @map("id")
  company         String?      @map("company")
  jobTitle        String?      @map("job_title")
  salaryRange     String[]     @map("salary_range")
  salaryCurrency  String?      @map("salary_currency")
  jobType         JobType?     @map("job_type")
  jobWorkMode     JobWorkMode? @map("job_work_mode")
  location        String?      @map("location")
  applyEmails     String[]     @map("apply_emails")
  applyLinks      String[]     @map("apply_links")
  technology      String[]     @map("technology")
  experienceRange Int[]        @map("experience_range")
  tags            String[]     @map("tags")
  raw             String       @map("raw")
  seekingWork     Boolean      @default(false) @map("seeking_work")
  status          JobStatus    @default(AWAITING_USER_INFO) @map("status")
  createdAt       DateTime     @default(now()) @map("created_at")
  updatedAt       DateTime     @updatedAt @map("updated_at")
  User            User?        @relation(fields: [userId], references: [id])
  userId          String?      @map("user_id")
}
