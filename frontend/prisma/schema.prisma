// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id               String            @id @default(cuid())
  name             String?
  email            String?           @unique
  avatar           String?
  token            String?
  provider         String?
  role             UserRole          @default(USER)
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  UserJobBookMarks UserJobBookMark[]
}

enum JobStatus {
  APPROVED
  REJECTED
  AWAITING_USER_INFO
}

model Job {
  id               String    @id @default(cuid()) @map("id")
  company          String?   @map("company")
  jobTitle         String?   @map("job_title")
  minSalary        Decimal?  @map("min_salary")
  maxSalary        Decimal?  @map("max_salary")
  salaryCurrency   String?   @map("salary_currency")
  jobType          String?   @map("job_type")
  jobWorkMode      String?   @map("job_work_mode")
  location         String?   @map("location")
  applyEmails      String[]  @map("apply_emails")
  applyLinks       String[]  @map("apply_links")
  technology       String[]  @map("technology")
  technologyDomain String    @map("technology_domain")
  minExperience    Decimal?  @map("min_experience")
  maxExperience    Decimal?  @map("max_experience")
  tags             String[]  @map("tags")
  raw              String    @map("raw")
  seekingWork      Boolean   @default(false) @map("seeking_work")
  status           JobStatus @default(AWAITING_USER_INFO) @map("status")
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")
  User             User?     @relation(fields: [userId], references: [id])
  userId           String?   @map("user_id")
}
